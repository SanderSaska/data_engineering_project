services:
  airflow:
    build:
      context: ./docker
      dockerfile: Dockerfile-airflow
    image: custom-airflow:latest
    container_name: airflow
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@airflow-metadata/airflow_metadata
    ports:
      - "8080:8080"
    depends_on:
      - airflow-metadata
      - postgres
      - oracle
    volumes:
      - ./dags:/opt/airflow/dags
    networks:
      - airflow-net

  airflow-webserver:
    build: .
    image: airflow-webserver
    container_name: airflow-webserver
    environment:
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@airflow-metadata/airflow_metadata
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
    ports:
      - "8081:8080"
    depends_on:
      - airflow-metadata
      - airflow
    volumes:
      - ./dags:/opt/airflow/dags
    networks:
      - airflow-net
    command: ["airflow", "webserver"]

  airflow-scheduler:
    build: .
    image: airflow-with-duckdb
    container_name: airflow-scheduler
    environment:
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@airflow-metadata/airflow_metadata
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
    volumes:
      - ./dags:/opt/airflow/dags
    depends_on:
      - airflow-metadata
      - airflow
    networks:
      - airflow-net
    command: ["airflow", "scheduler"]

  airflow-init:
    build: .
    image: airflow-init
    container_name: airflow-init
    command: ["airflow", "db", "init"]
    environment:
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@airflow-metadata/airflow_metadata
    depends_on:
      - airflow-metadata
    networks:
      - airflow-net

  dbt:
    image: ghcr.io/dbt-labs/dbt-postgres:1.8.2
    container_name: dbt
    build:
      context: ./docker
      dockerfile: Dockerfile-dbt
    entrypoint: bash
    tty: true
    depends_on:
      - postgres
    ports:
      - 8060:8060
    volumes:
      - ./dbt/project/dbt_project:/usr/app
      - ./dbt/.dbt:/root/.dbt
    networks:
      - airflow-net

  # Airflow Metadata Database Service
  airflow-metadata:
    image: postgres:15
    container_name: airflow_metadata_db
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow_metadata
    ports:
      - "5433:5432"  # Expose on a different port to avoid conflict
    volumes:
      - airflow_metadata_data:/var/lib/postgresql/data
    networks:
      - airflow-net

  # Application Database Service
  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: raw_data
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init_script:/docker-entrypoint-initdb.d
    networks:
      - airflow-net

  # IDE for accessing Postgres
  pgadmin:
    container_name: pgadmin
    image: elestio/pgadmin:REL-8_10
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
    volumes:
      - ./data/pgadmin_data:/var/lib/pgadmin
    ports:
      - 5050:80
    networks:
      - airflow-net

  oracle:
    image: oracleinanutshell/oracle-xe-11g
    container_name: oracle
    environment:
      ORACLE_PASSWORD: oracle
    ports:
      - "1521:1521"
    volumes:
      - oracle_data:/u01/app/oracle
    networks:
      - airflow-net

  duckdb:
    image: python:3.9-slim
    container_name: duckdb
    build:
      context: ./docker
      dockerfile: Dockerfile-duckdb
    volumes:
      - ./data:/app/data
    stdin_open: true
    tty: true
    networks:
      - airflow-net

  neo4j:
    image: neo4j:5
    container_name: neo4j
    environment:
      - NEO4J_AUTH=neo4j/neo4jpassword  # Replace "neo4jpassword" with your desired password
    ports:
      - "7474:7474"  # Neo4j Web UI
      - "7687:7687"  # Bolt Protocol (for database connections)
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - neo4j_import:/var/lib/neo4j/import
    networks:
      - airflow-net


volumes:
  postgres_data:
  oracle_data:
  airflow_metadata_data:
  neo4j_data:
  neo4j_logs:
  neo4j_import:

networks:
  airflow-net:
    driver: bridge
